version: '3.9'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./web/index.html:/usr/share/nginx/html/index.html
      - ./web/api.js:/usr/share/nginx/html/api.js
  redis:
    container_name: redis
    image: redis:latest
    command: ["redis-server", "--requirepass", "toor", "--appendonly", "yes"]
    networks:
      - app-network
    ports:
      - 6379:6379
    restart: on-failure
  goapp:
    build: .
    command: ["./app","api"]
    container_name: goapp
    networks:
      - app-network
    ports:
      - 443:443
    restart: on-failure
    depends_on:
      - redis
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    networks:
      - app-network
    volumes:
      - ./yaml/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    depends_on:
      - goapp
  grafana:
    image: grafana/grafana
    networks:
      - app-network
    ports:
      - '3000:3000'
    volumes:
      - ./yaml/prometheus-provisioning.yaml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - ./yaml/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./yaml/golang.json:/etc/grafana/provisioning/dashboards/golang.json
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
networks:
  app-network:
    driver: bridge